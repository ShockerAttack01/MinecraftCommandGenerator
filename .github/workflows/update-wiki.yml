name: Update Wiki

on:
  push:
    branches:
      - main
    paths:
      - 'docs/wiki/**'

jobs:
  update-wiki:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install markdown-link-check
        run: npm install -g markdown-link-check

      - name: Check links
        run: |
          for file in docs/wiki/*.md; do
            markdown-link-check "$file"
          done

      - name: Update wiki
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            // Get all markdown files from docs/wiki
            const wikiDir = path.join(process.env.GITHUB_WORKSPACE, 'docs/wiki');
            const files = fs.readdirSync(wikiDir)
              .filter(file => file.endsWith('.md'))
              .map(file => ({
                name: file,
                content: fs.readFileSync(path.join(wikiDir, file), 'utf8')
              }));
            
            // Update each file in the wiki
            for (const file of files) {
              await github.rest.repos.createOrUpdateFileContents({
                owner: context.repo.owner,
                repo: context.repo.repo,
                path: `wiki/${file.name}`,
                message: `Update wiki: ${file.name}`,
                content: Buffer.from(file.content).toString('base64'),
                branch: 'wiki'
              });
            }

      - name: Create wiki issue on failure
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Wiki Update Failed',
              body: 'The automatic wiki update failed. Please check the [workflow run](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}) for details.'
            }) 